Warrior {
  distance(Friendly.Healer) >= Friendly.Healer.range(), Friendly.Healer.alive() -> Move direction(Friendly.Healer) Attack closest(Enemy)
  otherwise -> Move direction(closest(Enemy)) Attack closest(Enemy)
}

Healer {
  wounded() -> Heal Friendly.Healer
  Friendly.Warrior.wounded() -> Move direction(Friendly.Warrior) Heal Friendly.Warrior
  Friendly.Ranger.wounded() -> Move direction(Friendly.Ranger) Heal Friendly.Ranger
  distance(Enemy.Warrior) <= Enemy.Warrior.range() -> Move oppositeDirection(Enemy.Warrior)
  distance(Enemy.Ranger) <= Enemy.Ranger.range() -> Move oppositeDirection(Enemy.Ranger)
  otherwise -> Move direction(Enemy.Healer)
}

Ranger {
  distance(Friendly.Healer) >= Friendly.Ranger.range(), Friendly.Healer.alive() -> Move direction(Friendly.Healer) Attack closest(Enemy)
  otherwise -> Move direction(closest(Enemy)) Attack closest(Enemy)
}
